34. Find First and Last Position of Element in Sorted Array
Solved
Medium
Topics
Companies
Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].

You must write an algorithm with O(log n) runtime complexity.

 

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]
Example 3:

Input: nums = [], target = 0
Output: [-1,-1]
 

Constraints:

0 <= nums.length <= 105
-109 <= nums[i] <= 109
nums is a non-decreasing array.
-109 <= target <= 109



_____________________________________________________________________________________
class Solution {
    public int[] searchRange(int[] nums, int target) {
      int s = 0; int e = nums.length-1;
      int mid=0;
      int ans[] ={-1,-1};

      //first occourance
      while(s<=e){
        mid = (s+e)/2;
        if(nums[mid]==target){
            ans[0]=mid;
            e=mid-1;
        }else if(nums[mid] > target) e=mid-1;
        else s=mid+1;
      }
        //Sanity check
        if(ans[0] == -1) return ans;

        s=0; e=nums.length-1;
        while(s<=e){
            mid = (s+e)/2;

            if(nums[mid] == target){
                ans[1]=mid;
                s=mid+1;
            }else if(nums[mid] > target) e =mid-1;
            else s=mid+1;
        }
        return ans;
    }
}
